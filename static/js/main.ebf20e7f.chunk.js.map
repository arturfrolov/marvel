{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charList/CharList.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","componentWillUnmount","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","descr","styleImg","Skeleton","_Fragment","CharInfo","charId","props","componentDidUpdate","prevProps","prevState","snapshot","skeleton","item","i","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","classList","remove","add","focus","renderItems","arr","imgStyle","tabIndex","onCharSelected","onKeyPress","e","key","disabled","propTypes","PropTypes","func","ErrorBoundary","componentDidCatch","errorInfo","App","selectedChar","decoration","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebf20e7f.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: \"block\", width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={img} alt='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=8baa8cdc56370685cb8a424e259bc4ba';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {Component} from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport MarvelService from \"../../services/MarvelService\";\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 3000);\n    }\n\n    componentWillUnmount() {\n        // clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true})\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    const descr = description ? description : 'There is no information on this character.'\n    let styleImg = {objectFit: 'cover'}\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        styleImg = {objectFit: 'contain'}\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={styleImg}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {descr}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from \"../../services/MarvelService\";\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) return;\n\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true})\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let styleImg = {objectFit: 'cover'}\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        styleImg = {objectFit: 'contain'}\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={styleImg}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i >= 10) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport MarvelService from \"../../services/MarvelService\";\n\nimport './charList.scss';\nimport CharInfo from \"../charInfo/CharInfo\";\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true,\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended,\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems = (arr) => {\n        const items = arr.map((item, i) => {\n            let imgStyle = {objectFit: 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {objectFit: 'unset'}\n            }\n\n            return (\n                <li className=\"char__item\"\n                                tabIndex={0}\n                                ref={this.setRef}\n                                key={item.id}\n                                onClick={() => {\n                                    this.props.onCharSelected(item.id);\n                                    this.focusOnItem(i);\n                                }}\n                                onKeyPress={(e) => {\n                                    if (e.key === ' ' || e.key === 'Enter') {\n                                        this.props.onCharSelected(item.id);\n                                        this.focusOnItem(i);\n                                    }\n                                }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const {charList, loading, error, newItemLoading, offset, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{display: charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharInfo.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null,\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}