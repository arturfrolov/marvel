{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","id","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","comic","_comic$textObjects$","_comic$textObjects$2","title","textObjects","text","pageCount","language","price","prices","getAllCharacters","offset","res","results","map","getCharacter","getAllComics","getComics","View","_ref","descr","styleImg","_jsxs","className","children","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","Component","constructor","state","componentDidCatch","errorInfo","this","setState","render","MainPage","selectedChar","decoration"],"mappings":"iGAAe,UAA0B,kC,OCQ1BA,IANMA,IAEbC,cAAA,OAAKC,MAAO,CAACC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAASC,UAAW,UAAWC,OAAQ,UAAYC,IAAKC,EAAKC,IAAI,W,2CCqDjHC,IAvDUA,KACrB,MAAM,QAACC,EAAO,QAAEC,EAAO,MAAEC,EAAK,WAAEC,GCDbC,MACnB,MAAOJ,EAASK,GAAcC,oBAAS,IAChCJ,EAAOK,GAAYD,mBAAS,MAyBnC,MAAO,CAACN,UAASC,QAvBDO,uBAAYC,eAAOC,GAAsF,IAAjFC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAAOG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMI,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,eAAgB,oBAE5FP,GAAW,GAEX,IACI,MAAMY,QAAiBC,MAAMR,EAAK,CAACC,SAAQI,OAAMC,YAEjD,IAAKC,EAASE,GACV,MAAM,IAAIC,MAAM,mBAADC,OAAoBX,EAAG,cAAAW,OAAaJ,EAASK,SAGhE,MAAMC,QAAaN,EAASO,OAE5B,OADAnB,GAAW,GACJkB,EACT,MAAOE,GAGL,MAFApB,GAAW,GACXE,EAASkB,EAAEC,SACLD,KAEX,IAIuBvB,QAAOC,WAFdK,uBAAY,IAAMD,EAAS,OAAO,MDxBPH,GAExCuB,EAAW,4CACXC,EAAU,0CAwBVC,EAAuBC,IAClB,CACHC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACXC,YAAaH,EAAKG,YAClBC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAG5B,IACvB6B,KAAMT,EAAKQ,KAAK,GAAG5B,IACnB8B,OAAQV,EAAKU,OAAOC,QAItBC,EAAoBC,IAAW,IAADC,EAAAC,EAChC,MAAO,CACHd,GAAIY,EAAMZ,GACVe,MAAOH,EAAMG,MACbb,aAAiC,QAApBW,EAAAD,EAAMI,YAAY,UAAE,IAAAH,OAAA,EAApBA,EAAsBI,OAAQ,0BAC3CC,UAAWN,EAAMM,UAAS,GAAA5B,OAAMsB,EAAMM,UAAS,OAAQ,2CACvDf,UAAWS,EAAMT,UAAUC,KAAO,IAAMQ,EAAMT,UAAUE,UACxDc,UAA8B,QAApBL,EAAAF,EAAMI,YAAY,UAAE,IAAAF,OAAA,EAApBA,EAAsBK,WAAY,QAC5CC,MAAOR,EAAMS,OAAO,GAAGD,MAAK,GAAA9B,OAAMsB,EAAMS,OAAO,GAAGD,MAAK,KAAM,kBAIrE,MAAO,CAACnD,UAASE,QAAOC,aAAYkD,iBA5CX5C,iBAAiC,IAA1B6C,EAAM1C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHlB,IAIhB,MAAM2C,QAAYtD,EAAQ,GAADoB,OAAIM,EAAQ,8BAAAN,OAA6BiC,EAAM,KAAAjC,OAAIO,IAC5E,OAAO2B,EAAIhC,KAAKiC,QAAQC,IAAI5B,IA0CsB6B,aAvCjCjD,UACjB,MAAM8C,QAAYtD,EAAQ,GAADoB,OAAIM,EAAQ,eAAAN,OAAcU,EAAE,KAAAV,OAAIO,IACzD,OAAOC,EAAoB0B,EAAIhC,KAAKiC,QAAQ,KAqCoBG,aAlC/ClD,iBAAuC,IAAhC6C,EAAM1C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAZR,GAatB,MAAM2C,QAAYtD,EAAQ,GAADoB,OAAIM,EAAQ,0BAAAN,OAAyBiC,EAAM,KAAAjC,OAAIO,IACxE,OAAO2B,EAAIhC,KAAKiC,QAAQC,IAAIf,IAgCkDkB,UA7BhEnD,UACd,MAAM8C,QAAYtD,EAAQ,GAADoB,OAAIM,EAAQ,WAAAN,OAAUU,EAAE,KAAAV,OAAIO,IACrD,OAAOc,EAAiBa,EAAIhC,KAAKiC,QAAQ,Q,6JE3BlC,G,MAAA,IAA0B,qC,OCwDzC,MAAMK,EAAOC,IAAa,IAAZ,KAAChC,GAAKgC,EAChB,MAAM,KAAC9B,EAAI,YAAEC,EAAW,UAAEC,EAAS,SAAEG,EAAQ,KAAEE,GAAQT,EACjDiC,EAAQ9B,GAA4B,6CAC1C,IAAI+B,EAAW,CAACtE,UAAW,SAK3B,MAJkB,wEAAdwC,IACA8B,EAAW,CAACtE,UAAW,YAIvBuE,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9B9E,cAAA,OAAKO,IAAKsC,EAAWpC,IAAI,mBAAmBoE,UAAU,kBAAkB5E,MAAO0E,IAC/EC,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7B9E,cAAA,KAAG6E,UAAU,mBAAkBC,SAAEnC,IACjC3C,cAAA,KAAG6E,UAAU,oBAAmBC,SAC3BJ,IAELE,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7B9E,cAAA,KAAG+E,KAAM/B,EAAU6B,UAAU,sBAAqBC,SAC9C9E,cAAA,OAAK6E,UAAU,QAAOC,SAAC,eAE3B9E,cAAA,KAAG+E,KAAM7B,EAAM2B,UAAU,2BAA0BC,SAC/C9E,cAAA,OAAK6E,UAAU,QAAOC,SAAC,qBAQhCE,MA7Ef,WAEI,MAAOvC,EAAMwC,GAAWhE,mBAAS,OAE3B,QAACN,EAAO,MAAEE,EAAK,WAAEC,EAAU,aAAEuD,GAAiB3D,cAEpDwE,qBAAU,KACNC,MAED,IAEH,MAAMC,EAAgB3C,IAClBwC,EAAQxC,IAGN0C,EAAaA,KACfrE,IACA,MAAM4B,EAAK2C,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAC5DlB,EAAa3B,GACR8C,KAAKJ,IAGRK,EAAe5E,EAAQb,cAACD,IAAY,IAAK,KACzC2F,EAAU/E,EAAUX,cAAC2F,IAAO,IAAK,KACjCC,EAAYjF,GAAWE,IAAU4B,EAA8B,KAAtBzC,cAACwE,EAAI,CAAC/B,KAAMA,IAE3D,OACImC,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACtBW,EACAC,EACAE,EACDhB,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAC/BF,eAAA,KAAGC,UAAU,oBAAmBC,SAAA,CAAC,8BACF9E,cAAA,SAAK,4CAGpCA,cAAA,KAAG6E,UAAU,oBAAmBC,SAAC,0BAGjC9E,cAAA,UAAQ6E,UAAU,sBAAsBgB,QAASV,EAAWL,SACxD9E,cAAA,OAAK6E,UAAU,QAAOC,SAAC,aAE3B9E,cAAA,OAAKO,IAAKuF,EAASrF,IAAI,UAAUoE,UAAU,kC,MC8D5CkB,MAvGf,SAAkBC,GAEd,MAAOC,EAAUC,GAAejF,mBAAS,KAClCkF,EAAgBC,GAAqBnF,oBAAS,IAC9CgD,EAAQoC,GAAapF,mBAAS,MAC9BqF,EAAWC,GAAgBtF,oBAAS,IAGrC,QAACN,EAAO,MAAEE,EAAK,iBAAEmD,GAAoBtD,cAE3CwE,qBAAU,KACNsB,EAAUvC,GAAQ,KAEnB,IAEH,MAAMuC,EAAYA,CAACvC,EAAQwC,KACbL,GAAVK,GACAzC,EAAiBC,GACZuB,KAAKkB,IAIRA,EAAoBC,IACtB,IAAIC,GAAQ,EACRD,EAAYnF,OAAS,IACrBoF,GAAQ,GAGZV,GAAYD,GAAY,IAAIA,KAAaU,KACzCP,GAAkB,GAClBC,GAAUpC,GAAUA,EAAS,IAC7BsC,EAAaK,IAIXC,EAAWC,iBAAO,IAElBC,EAAerE,IACjBmE,EAASG,QAAQC,SAAQC,GAAQA,EAAKC,UAAUC,OAAO,yBACvDP,EAASG,QAAQtE,GAAIyE,UAAUE,IAAI,uBACnCR,EAASG,QAAQtE,GAAI4E,SAsCnBlE,EAnCN,SAAqBmE,GACjB,MAAMnE,EAAQmE,EAAInD,KAAI,CAAC8C,EAAMM,KACzB,IAAIC,EAAW,CAACpH,UAAW,SAK3B,MAJuB,wEAAnB6G,EAAKrE,YACL4E,EAAW,CAACpH,UAAW,UAIvBuE,eAAA,MAAIC,UAAU,aACE6C,SAAU,EACVC,IAAKC,GAAMf,EAASG,QAAQQ,GAAKI,EAEjC/B,QAASA,KACLG,EAAM6B,eAAeX,EAAKxE,IAC1BqE,EAAYS,IAEhBM,WAAa1F,IACK,MAAVA,EAAE2F,KAAyB,UAAV3F,EAAE2F,MACnB/B,EAAM6B,eAAeX,EAAKxE,IAC1BqE,EAAYS,KAElB1C,SAAA,CACd9E,cAAA,OAAKO,IAAK2G,EAAKrE,UAAWpC,IAAKyG,EAAKvE,KAAM1C,MAAOwH,IACjDzH,cAAA,OAAK6E,UAAU,aAAYC,SAAEoC,EAAKvE,SAZjBuE,EAAKxE,OAiBlC,OACI1C,cAAA,MAAI6E,UAAU,aAAYC,SACrB1B,IAKC4E,CAAY/B,GAEpBR,EAAe5E,EAAQb,cAACD,IAAY,IAAK,KACzC2F,EAAU/E,IAAYwF,EAAiBnG,cAAC2F,IAAO,IAAK,KAE1D,OACIf,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACtBW,EACAC,EACAtC,EACDpD,cAAA,UACI6E,UAAU,mCACVoD,SAAU9B,EACVlG,MAAO,CAACC,QAASoG,EAAY,OAAS,SACtCT,QAASA,IAAMW,EAAUvC,GAAQa,SACjC9E,cAAA,OAAK6E,UAAU,QAAOC,SAAC,oB,MCnFxBoD,MAjBEA,IAETtD,eAAAuD,WAAA,CAAArD,SAAA,CACI9E,cAAA,KAAG6E,UAAU,eAAcC,SAAC,iDAC5BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBF,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACnC9E,cAAA,OAAK6E,UAAU,2BACf7E,cAAA,OAAK6E,UAAU,4BAEnB7E,cAAA,OAAK6E,UAAU,0BACf7E,cAAA,OAAK6E,UAAU,0BACf7E,cAAA,OAAK6E,UAAU,gC,MCqC/B,MAAML,EAAOC,IAAa,IAAZ,KAAChC,GAAKgC,EAChB,MAAM,KAAC9B,EAAI,YAAEC,EAAW,UAAEC,EAAS,SAAEG,EAAQ,KAAEE,EAAI,OAAEC,GAAUV,EAC/D,IAAIkC,EAAW,CAACtE,UAAW,SAK3B,MAJkB,wEAAdwC,IACA8B,EAAW,CAACtE,UAAW,YAIvBuE,eAAAuD,WAAA,CAAArD,SAAA,CACIF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzB9E,cAAA,OAAKO,IAAKsC,EAAWpC,IAAKkC,EAAM1C,MAAO0E,IACvCC,eAAA,OAAAE,SAAA,CACI9E,cAAA,OAAK6E,UAAU,kBAAiBC,SAAEnC,IAClCiC,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACvB9E,cAAA,KAAG+E,KAAM/B,EAAU6B,UAAU,sBAAqBC,SAC9C9E,cAAA,OAAK6E,UAAU,QAAOC,SAAC,eAE3B9E,cAAA,KAAG+E,KAAM7B,EAAM2B,UAAU,2BAA0BC,SAC/C9E,cAAA,OAAK6E,UAAU,QAAOC,SAAC,oBAKvC9E,cAAA,OAAK6E,UAAU,cAAaC,SACvBlC,IAEL5C,cAAA,OAAK6E,UAAU,eAAcC,SAAC,YAC9BF,eAAA,MAAIC,UAAU,oBAAmBC,SAAA,CAC5B3B,EAAO3B,OAAS,EAAI,KAAO,yCAExB2B,EAAOiB,KAAI,CAAC8C,EAAMM,KAEd,KAAIA,GAAK,IACT,OACIxH,cAAA,MAAY6E,UAAU,oBAAmBC,SACpCoC,EAAKvE,MADD6E,aAetBY,MAzFf,SAAkBpC,GAEd,MAAOvD,EAAMwC,GAAWhE,mBAAS,OAE3B,QAACN,EAAO,MAAEE,EAAK,WAAEC,EAAU,aAAEuD,GAAgB3D,cAEnDwE,qBAAU,KACNC,MAED,CAACa,EAAMqC,SAEV,MAAMlD,EAAaA,KACf,MAAM,OAACkD,GAAUrC,EACZqC,IAELvH,IACAuD,EAAagE,GACR7C,KAAKJ,KAGRA,EAAgB3C,IAClBwC,EAAQxC,IAIN6F,EAAW7F,GAAQ9B,GAAWE,EAAQ,KAAOb,cAACkI,EAAQ,IACtDzC,EAAe5E,EAAQb,cAACD,IAAY,IAAK,KACzC2F,EAAU/E,EAAUX,cAAC2F,IAAO,IAAK,KACjCC,EAAYjF,GAAWE,IAAU4B,EAA8B,KAAtBzC,cAACwE,EAAI,CAAC/B,KAAMA,IAE3D,OACImC,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACtBwD,EACA7C,EACAC,EACAE,MC1Cb,MAAM2C,UAAsBC,YAAUC,cAAA,SAAAlH,WAAA,KAClCmH,MAAQ,CACJ7H,OAAO,GAGX8H,kBAAkB9H,EAAO+H,GACrBC,KAAKC,SAAS,CACVjI,OAAO,IAIfkI,SACI,OAAIF,KAAKH,MAAM7H,MACJb,cAACD,IAAY,IAGjB8I,KAAK7C,MAAMlB,UAIXyD,QCvBA,MAA0B,mCCmC1BS,UA1BEA,KAEb,MAAOC,EAAchE,GAAWhE,mBAAS,MAMzC,OACI2D,eAAAuD,WAAA,CAAArD,SAAA,CACI9E,cAACuI,EAAa,CAAAzD,SACV9E,cAACgF,EAAU,MAEfJ,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC1B9E,cAACuI,EAAa,CAAAzD,SACV9E,cAAC+F,EAAQ,CAAC8B,eAXFnF,IACpBuC,EAAQvC,QAYA1C,cAACuI,EAAa,CAAAzD,SACV9E,cAACoI,EAAQ,CAACC,OAAQY,SAG1BjJ,cAAA,OAAK6E,UAAU,gBAAgBtE,IAAK2I,EAAYzI,IAAI","file":"static/js/3.fc3a8624.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: \"block\", width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={img} alt='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=8baa8cdc56370685cb8a424e259bc4ba';\r\n    const _baseOffset = 210;\r\n    const _baseComicsOffset = 20;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseComicsOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.textObjects[0]?.text || 'There is no description',\r\n            pageCount: comic.pageCount ? `${comic.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            language: comic.textObjects[0]?.language || 'en-us',\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}$` : 'not available',\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComics};\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from \"react\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nfunction RandomChar() {\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n    const {loading, error, clearError, getCharacter} =  useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        getCharacter(id)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\" onClick={updateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n    const descr = description ? description : 'There is no information on this character.'\r\n    let styleImg = {objectFit: 'cover'}\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        styleImg = {objectFit: 'contain'}\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={styleImg}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {descr}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import {useState, useEffect, useRef} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport './charList.scss';\r\n\r\nfunction CharList(props) {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n\r\n    const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded);\r\n    }\r\n\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(ended);\r\n    }\r\n\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = {objectFit: 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {objectFit: 'unset'}\r\n            }\r\n\r\n            return (\r\n                <li className=\"char__item\"\r\n                                tabIndex={0}\r\n                                ref={el => itemRefs.current[i] = el}\r\n                                key={item.id}\r\n                                onClick={() => {\r\n                                    props.onCharSelected(item.id);\r\n                                    focusOnItem(i);\r\n                                }}\r\n                                onKeyPress={(e) => {\r\n                                    if (e.key === ' ' || e.key === 'Enter') {\r\n                                        props.onCharSelected(item.id);\r\n                                        focusOnItem(i);\r\n                                    }\r\n                                }}>\r\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{display: charEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import {useState, useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nimport './charInfo.scss';\r\n\r\nfunction CharInfo(props) {\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n    const {loading, error, clearError, getCharacter} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        // eslint-disable-next-line\r\n    }, [props.charId])\r\n\r\n    const updateChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) return;\r\n\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n    let styleImg = {objectFit: 'cover'}\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        styleImg = {objectFit: 'contain'}\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={styleImg}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There is no comics with this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        // eslint-disable-next-line\r\n                        if (i >= 10) return;\r\n                        return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;"],"sourceRoot":""}