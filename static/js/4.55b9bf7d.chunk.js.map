{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","id","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","comic","_comic$textObjects$","_comic$textObjects$2","title","textObjects","text","pageCount","language","price","prices","getAllCharacters","offset","res","results","map","getCharacter","getAllComics","getComics","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","arr","item","i","imgStyle","tabIndex","Link","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","outLet","useOutlet","_Fragment","Outlet"],"mappings":"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","file":"static/js/4.55b9bf7d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: \"block\", width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={img} alt='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=8baa8cdc56370685cb8a424e259bc4ba';\r\n    const _baseOffset = 210;\r\n    const _baseComicsOffset = 20;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseComicsOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.textObjects[0]?.text || 'There is no description',\r\n            pageCount: comic.pageCount ? `${comic.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            language: comic.textObjects[0]?.language || 'en-us',\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}$` : 'not available',\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComics};\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(20);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded);\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = {objectFit: 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {objectFit: 'unset'}\r\n            }\r\n\r\n            return (\r\n                <li className=\"comics__item\"\r\n                    tabIndex={0}\r\n                    key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\" style={imgStyle}/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{display: comicsEnded ? 'none' : 'block'}}\r\n                    onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import {Outlet, useOutlet} from \"react-router-dom\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\n\r\nconst ComicsPage = () => {\r\n    const outLet = useOutlet();\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            { outLet ? <Outlet/> : <ComicsList/> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}